// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                 String      @id @default(uuid())
  email              String      @unique
  first_name         String
  last_name          String
  avatar_url         String?
  password           String
  is_master_group    Boolean     @default(false)
  blockchain_address String?
  group_id           String?
  is_verified        Boolean     @default(false)
  is_active          Boolean     @default(true)
  group              group?      @relation(fields: [group_id], references: [id])
  updatedAt          DateTime    @default(now()) @updatedAt
  createdAt          DateTime    @default(now())
  user_role          user_role[]
}

// [Adimn , Viewer, Accountant, Manager]
model role {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @unique
  description              String?
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @default(now()) @updatedAt
  role_resource_permission role_resource_permission[]
  user_role                user_role[]
}

// [User, Document, Sign Document, Certificate, Sign Template, Group ]
model resource {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @unique
  description              String?
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @default(now()) @updatedAt
  role_resource_permission role_resource_permission[]
}

model role_resource_permission {
  id            Int       @id @default(autoincrement())
  role_id       Int?
  resource_id   Int?
  permission_id Int?
  role          role?     @relation(fields: [role_id], references: [id])
  resource      resource? @relation(fields: [resource_id], references: [id])
}

model user_role {
  id      String  @id @default(uuid())
  user_id String?
  role_id Int?
  user    user?   @relation(fields: [user_id], references: [id])
  role    role?   @relation(fields: [role_id], references: [id])
}

model group {
  id          String   @id @default(uuid())
  name        String
  description String?
  master_id   String?
  users       user[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}
